module test_common
    use funit
    use libtt_common

    implicit none

    real(kind=8), dimension(3,3), parameter :: A = reshape((/1, 2, 3, &
                                                             4, 5, 6, &
                                                             7, 8, 9/),&
                                                            (/3,3/))

contains

    @test
    subroutine assert_iEqualJReturnsOne()
        integer :: res

        res = kronecker(1,1)

        @assertTrue(res == 1)
    end subroutine assert_iEqualJReturnsOne


    @test
    subroutine assert_iNotEqualJReturnsZero()
        integer :: res

        res = kronecker(1,2)

        @assertTrue(res == 0)
    end subroutine assert_iNotEqualJReturnsZero

    !@test
    subroutine assert_failsIfNonSymmetric()
        real(kind=8), dimension(2,1) :: A
        real(kind=8)                 :: res

        A   = 0.0d0
        res = trace(A)

        @assertExceptionRaised('Input must be symmetric!')

    end subroutine assert_failsIfNonSymmetric

    @test
    subroutine assert_result2x2()
        real(kind=8), dimension(2,2) :: B

        B = reshape((/1, 2, 3, 4/), (/2, 2/))

        @assertEqual(5, trace(B))
    end subroutine assert_result2x2

    @test
    subroutine assert_result3x3()

        @assertEqual(15, trace(A))
    end subroutine assert_result3x3

    @test
    subroutine assert_determinant()

        @assertEqual(0.0d0, det(A))
     end subroutine assert_determinant

end module test_common