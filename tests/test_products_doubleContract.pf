module test_products_doubleContract
    use funit
    use libtt_products

    implicit none
    
    real(kind=8), dimension(3,3)     :: A
    real(kind=8), dimension(3,3)     :: B
    real(kind=8), dimension(3,3,3,3) :: C

contains

    @before
    subroutine set_up()
        A = reshape((/1, 2, 3, 4, 5, 6, 7, 8, 9/),&
                    (/3,3/))
        B = reshape((/2, 4, 3, 5, 1, 2, 4, 3, 4/),&
                    (/3,3/))
        C = reshape((/2, 2, 3, 5, 1, 5, 2, 7, 4, &
                      1, 4, 7, 5, 2, 2, 4, 3, 5, &
                      4, 5, 8, 5, 4, 2, 4, 2, 7, &
                      3, 4, 6, 5, 3, 2, 8, 6, 4, &
                      7, 9, 3, 5, 9, 2, 9, 3, 2, &
                      5, 3, 2, 5, 5, 2, 4, 4, 6, &
                      3, 0, 3, 5, 2, 2, 7, 3, 5, &
                      1, 2, 4, 1, 1, 2, 9, 8, 4, &
                      1, 4, 3, 1, 5, 2, 4, 3, 4/),&
                      (/3,3,3,3/))                                       
    end subroutine set_up


    @test 
    subroutine assert_rank22()
        real(kind=8)            :: result
        real(kind=8), parameter :: expectedResult = 144.0d0

        @assertEqual(expectedResult, doubleContract(A, B))
    end subroutine assert_rank22

    @test 
    subroutine assert_rank22_operator()
        real(kind=8)            :: result
        real(kind=8), parameter :: expectedResult = 144.0d0

        @assertEqual(expectedResult, A.ddot.B)
    end subroutine assert_rank22_operator

    @test 
    subroutine assert_rank24()
        real(kind=8), dimension(3,3) :: expectedResult

        expectedResult = reshape((/176, 169, 197, 216, 216, 188, 172, 201, 147/), (/3,3/))

        @assertEqual(expectedResult, doubleContract(A, C))
    end subroutine assert_rank24

    @test 
    subroutine assert_rank24_operator()
        real(kind=8), dimension(3,3) :: expectedResult

        expectedResult = reshape((/176, 169, 197, 216, 216, 188, 172, 201, 147/), (/3,3/))

        @assertEqual(expectedResult, A.ddot.C)
    end subroutine assert_rank24_operator

    @test 
    subroutine assert_rank42()
        real(kind=8), dimension(3,3) :: expectedResult

        expectedResult = reshape((/131, 156, 172, 157, 171, 93, 280, 194, 200/), (/3,3/))

        @assertEqual(expectedResult, doubleContract(C, A))
    end subroutine assert_rank42

    @test 
    subroutine assert_rank42_operator()
        real(kind=8), dimension(3,3) :: expectedResult

        expectedResult = reshape((/131, 156, 172, 157, 171, 93, 280, 194, 200/), (/3,3/))

        @assertEqual(expectedResult, C.ddot.A)
    end subroutine assert_rank42_operator

end module test_products_doubleContract