module test_tensors_common
    use funit
    use libtt_tensors_common

    implicit none

    real(kind=8), dimension(3,3) :: expected_result_2ndOrder
    real(kind=8), dimension(3,3), parameter :: A = reshape((/1, 2, 3, &
                                                             4, 5, 6, &
                                                             7, 8, 9/),&
                                                            (/3,3/))

contains

    @test
    subroutine assert_eye()
        expected_result_2ndOrder = reshape((/1, 0, 0, 0, 1, 0, 0, 0, 1/),&
                                   (/3,3/))

        @assertEqual(expected_result_2ndOrder, eye())
    end subroutine assert_eye


    @test
    subroutine assert_symmetric()

        expected_result_2ndOrder = reshape((/1, 3, 5, 3, 5, 7, 5, 7, 9/),&
                                   (/3,3/))

        @assertEqual(expected_result_2ndOrder, symmetric(A))
    end subroutine assert_symmetric


    @test
    subroutine assert_scew()

        expected_result_2ndOrder = reshape((/0, -1, -2, 1, 0, -1, 2, 1, 0/),&
                                   (/3,3/))

        @assertEqual(expected_result_2ndOrder, scew(A))
    end subroutine assert_scew


    @test
    subroutine assert_scewPlusSymmetric()

        expected_result_2ndOrder = A
        @assertEqual(expected_result_2ndOrder, scew(A)+symmetric(A))
    end subroutine assert_scewPlusSymmetric

end module test_tensors_common